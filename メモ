サークルアップ

データベースを直接操作して管理。ジャンル追加など

サークル一覧は全てsqlデータベースからとる方がいいか。その場合初期掲載も新規登録から掲載する。ジャンル分け検索をデータベースから行えるように。

写真の取り扱い。

機能ーーー

タイミーのように、日付から新歓を検索

サークルの投稿者は閲覧数など見れるようにする
情報を受け取ることで楽しい。

各サークルのページに書いてあるジャンルからクリックしてもそのジャンルの絞り込みを表示

項目ーーー

前面ー

名前、大ジャンル、写真、一言、人数（いいね数で規模感がわかるようにしてもいい）

詳細ページー
名前、写真、ジャンル（公認、出会いの多さ、わちゃわちゃなどカードで表示）、人数、

詳細情報ー
紹介文、会費、活動頻度、男女比、イベント、キャンパス、インカレ、学部の多さ、インスタリンク


ジャンルカードー
初心者歓迎

興味のあるカードを最初に選んで、それを含むサークルを表示すると診断もどきができる。

デザインーーー

withとバイトルを参考に。
好みカードでジャンル、雰囲気
横棒フラフで雰囲気割合色分け
人数の規模別でアイコンの枠のデザインを豪華にするなど区別。
できるだけ文字ではなくデザインで情報が取れるように。


withの権利侵害しない程度に丸パクでいいと思う



質問ーーー
データベースのidは、どれか列を削除してもそれが持っていたidは番号が詰められて上書きされることなく、どんどんと穴あきで積み重なっていくが、それはそのままでいいのか。
editcircleのformではgetattibuteを使わないが、削除ではそれをつかってcircleIdを取っているのはなんの違いか。


メモーーーーーー
データベースのテーブルを追加したので作り直して

パスワード編集機能

絞り込み機能ーーーーーー

さらに絞り込むでいらんものは拡大表示
各サークルのページに書いてあるジャンルからクリックしてもそのジャンルの絞り込みを表示


最初に質問形式と絞り込み形式の２つ

質問形式ーー


１　運動系or文化イベント系orどちらでもいい
２　大きいサークルに入りたいor少人数がいいor気にしない
３　ガクちかを作りたいor気にしない
４　ノリが強いor弱い

検索機能ーー

１　名前
２　メインジャンル

さらに絞り込む
「特徴から探す」で数個の包括的なタグを選択させる
１　運動系か文化系
２　友達ができる　イベント　出会い
２　人多い　少ない
２　

ーーーーーーーーーーーーーーーーーーーーーーーーーー
*A*スポーツ

スポーツ全般サークル
イベント
フットサル
テニス
陸上
バスケットボール
サッカー
バレーボール
バドミントン
スキー
野球
ハンドボール
ラグビー
空手
柔道
弓道
水泳
自転車
お出かけ・旅行
その他入力欄

*B*テニス　メイン表示
イベント
スポーツ

*C*ダンス
ダンス
よさこい
イベント

*E*文化系
委員会・研究会
広告
料理
アカペラ・合唱
ボランティア
IT・eスポーツ

*F*軽音　メイン表示
なし
イベント

*G*イベント　メイン表示
お出かけ・旅行
スポーツ
ボランティア
国際交流
その他

*H*ボランティア　メイン表示
お出かけ・旅行
国際交流
イベント

*D*・*J*部活　マークをつける
アメリカンフットボール
ラグビー
サッカー
バスケットボール
バレーボール
ハンドボール
野球
ソフトボール
テニス
バドミントン
陸上
フットサル
ダンス
よさこい
スキー
軽音・バンド
アカペラ・合唱

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
大人数でわいわい value

大人数でわいわい
出会い豊富
わいわい賑やかサークル
飲み会で盛り上がる
ノリがいい
初心者大歓迎
楽しめればOK
アウトドア向き
運動部出身多め

少人数で仲良し value
小人数で仲良し
少なめの人数でアットホーム
穏やかサークル
ソフドリ全然OK
インドア向き
文化部出身多め

出会いがたくさん value
男女のバランスがいい
大人数でわいわい
合宿あり
出会い豊富
イケメンが多い
美女が多い
飲み会で盛り上がる
楽しめればOK
先輩とも仲良し

友達つくるならここ value
大人数でわいわい
合宿あり
出会い豊富
イベント多い
ノリがいい
わいわい賑やかサークル
飲み会で盛り上がる
楽しめればOK
過去問もらえる


色んな国の人と出会いたい value
国際交流できる
留学生多め
言語を学べる


ガクチカ作れる value
ガクチカ作れる
ボランティア
就活で役立つ
国際交流できる
表彰経験あり

------
tagが重複登録されるのは、appendしているのが悪い。すでにformdataにあるのにもう一個appndすることになる。


----------------------------------
; 投稿ページ

入会期間


タグを分けて見やすく
プレビューに近い形で全体をデザイン

今出川、京田辺


; 編集ページ、管理者ページ

削除
更新
閲覧数表示　期限付き
新歓カレンダー

; トップ
いいね　館員登録or　cookie
人気順


各ページのヘッダーにホーム画面マーク

; ジャンル分け
運動、文化絞り

; デバック
閲覧数console.logに

; サークルページ
人数バーの一致

; デザインーー
; サブ画像５枚まで
; 一言メッセージの説明、表示場所、字数制限
紹介文との区別、近くに配置


; パスワードの説明
; バーの認識が逆。色付きの方が多く思ってしまう。バイトルみたいにアイコンで表示の方がいい
; 背景や色をグラデーションに
; ジャンルの文字大きく



主要情報　の優先順位
タグごとに色分け
タグの数制限
サークル名に影とかつける

バックアップは日本語の文字化け対策必要
ヘルプのページ
全てのページにヘッダー
未選択か選択しないか
ホーム画面
タグの未選択時
topphotoしかファイルに保存されない
新歓カレンダーサイズ、縦長か
スケルトン
スクロールで表示増やす
閲覧数でランキング
musqlのバックアップ
; 紹介文の改行
バーの文字そろえる
; urlから管理者ページのブロック
; password文字数下限
パスワードの確認欄。パスワード見えるように
; 投稿欄　各中見出しにアイコンつける
グラデーションつけれるとこ全部つける
cookieを無効化されたときどうする、ヘルプ
pc対応
裏管理者ページの作成　テンプレある？
; 写真の枠
編集ページのスライドバーバグ
トップにもお気に入りマーク
全ての入力欄に文字数上限
ボタンださい
管理者ページのデザイン
nodemailer outlookで試して
パスワードのハッシュ化、再発行


DELETE リクエスト (サークル削除) や POST リクエスト (サークル登録) に CSRFトークンがない ため、CSRF攻撃の対象になりうる。

2.5 クエリのパフォーマンス問題
問題点:
SELECT * FROM Circles ORDER BY RAND() (app.js の / ルート) は 大規模データで遅くなる。
対策:
ORDER BY RAND() の代わりに OFFSET を使う (LIMIT 10 OFFSET FLOOR(RAND() * (SELECT COUNT(*) FROM Circles)))。

2.1 画像アップロードの問題
問題点:
multer を使用して画像をアップロードしているが、ファイルの拡張子チェックがない (app.js の upload 設定)。
対策:
multer の fileFilter を設定し、画像のみ受け付ける (.png, .jpg, .jpeg など)。
アップロードファイルのサイズ制限 (limits: { fileSize: 5 * 1024 * 1024 } など) を追加。

app.js の requireAuth に console.log() だけでなく、アクセスログ (fs や winston) を保存。

uploads/ に保存する方式はスケーラビリティに欠けるため、AWS S3 や Cloudinary などの CDN を利用すると良い。

3.3 スマホ対応の最適化
問題点:
circle.ejs や index.ejs の画像サムネイルが 100% 指定になっており、画面サイズによってはレイアウト崩れが発生。
対策:
object-fit: cover; を適用し、比率を維持したままトリミング。


; アプデ案ーーーーーーーーーーーーー

ログインといいね
イベントの掲載でオフシーズンも利用（meetup）

関連のサークル



; ホスティング
aws　のインスタンスを立ち上げる
セキュリティのポートを解放する
sshでlinuxに接続
サーバーにmysqlをインストール
githubからサーバーにファイルをあげる
npmとejsをダウンロードする
node app.jsでサーバーを走らせる
pm2で永久化

httpsの発行
ドメインの発行

sessionの設定
keyを環境変数に設定？？？
app.use(session({
    secret: process.env.SESSION_SECRET || 'your_secret_key',
    resave: false,
    saveUninitialized: false,
    cookie: {
        secure: process.env.NODE_ENV === 'production', // 本番環境では true, ローカルでは false
        httpOnly: true,
        sameSite: 'lax', // strict だとログインが切れるケースがあるため 'lax' に調整
        maxAge: 1000 * 60 * 60
    }
}));

secret キーは環境変数から取得する (process.env.SESSION_SECRET)。
本番環境では cookie.secure: true に設定する。

            

